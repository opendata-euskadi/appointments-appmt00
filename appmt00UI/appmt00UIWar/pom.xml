<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
		xmlns="http://maven.apache.org/POM/4.0.0"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	
<!-- ====================================================================== -->
<!-- PARENT                                                                 -->
<!-- ====================================================================== -->
	<parent>
		<groupId>appmt.appmt00.ui</groupId>
		<artifactId>appmt00UI</artifactId>
		<version>${revision}</version>
	</parent>

<!-- ====================================================================== -->
<!-- PROPERTIES                                                               -->
<!-- ====================================================================== -->	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

<!-- ====================================================================== -->
<!-- ARTIFACT                                                               -->
<!-- ====================================================================== -->
	<name>appmt00UIWar</name>
	<artifactId>appmt00UIWar</artifactId>
	<packaging>war</packaging>

<!-- ====================================================================== -->
<!-- DEPENDENCIES                                                           -->
<!-- ====================================================================== -->
	<dependencies>
		<!-- ///////////////////////////////////////// -->
		<!-- APPMT00: Web Services                     -->
		<!-- ///////////////////////////////////////// -->
<!-- 
		<dependency>
			<groupId>appmt00.core</groupId>
			<artifactId>appmt00COREWebProfileClasses</artifactId>
			<version>${revision}</version>
		</dependency>
-->
		<!-- ///////////////////////////////////////// -->
		<!-- APPMT00: API                              -->
		<!-- ///////////////////////////////////////// -->
		<dependency>
			<groupId>appmt.appmt00.api</groupId>
			<artifactId>appmt00APIClasses</artifactId>
			<version>${revision}</version>
		</dependency>

		<!-- ///////////////////////////////////////// -->
		<!-- APPMT00: CORE (stand-alone run)           -->
		<!-- ///////////////////////////////////////// -->
		<dependency>
			<groupId>appmt.appmt00.core</groupId>
			<artifactId>appmt00COREClasses</artifactId>
			<version>${revision}</version>
		</dependency>
		
		<!-- ///////////////////////////////////////// -->
		<!-- R01F: BusinessServices                    -->
		<!-- ///////////////////////////////////////// -->
		<dependency>
			<groupId>r01.r01f.businessservices.guice.core</groupId>
			<artifactId>r01fBusinessServicesCoreGuiceClasses</artifactId>
			<version>${r01f.version}</version>
		</dependency>
		
		<dependency>
			<groupId>r01.r01f.businessservices.guice.core</groupId>
			<artifactId>r01fBusinessWebServicesCoreGuiceClasses</artifactId>
			<version>${r01f.version}</version>
		</dependency>

		<!-- ///////////////////////////////////////// -->
		<!-- R01F: EJIE                                -->
		<!-- ///////////////////////////////////////// -->
		<dependency>
			<groupId>r01.r01f.ejie</groupId>
			<artifactId>r01fXLNetsClasses</artifactId>
			<version>${r01f.version}</version>
		</dependency>

		
		<!-- ///////////////////////////////////////// -->
		<!-- PLATEAWeb: AppEmbd                        -->
		<!-- ///////////////////////////////////////// -->
		<dependency>
			<groupId>r01.plateaweb.portal.appembed</groupId>
			<artifactId>r01PLATEAWebAppEmbedClasses</artifactId>
			<version>${plateaweb.version}</version>
		</dependency>

		<!-- ============================================================================================================================== -->
		<!-- OWASP: Form input sanitize >                                                                                                   -->
		<!-- ============================================================================================================================== -->
		<!-- AntiSamy: https://www.owasp.org/index.php/Category:OWASP_AntiSamy_Project -->
		<!--<dependency org="org.owasp.antisamy" name="antisamy" rev="1.5.5"
					conf="compile->compile,master;runtime->runtime"/>-->

		<!-- HTML Sanitizer: https://www.owasp.org/index.php/OWASP_Java_HTML_Sanitizer_Project -->
		<dependency>
			<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
			<artifactId>owasp-java-html-sanitizer</artifactId>
			<version>r239</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- ///////////////////////////////////////// -->
		<!-- ServletAPI                                -->
		<!-- ///////////////////////////////////////// -->
		<!-- [r01fWebProfileClasses] has SevletAPI as a dependency, 
			 ... BUT it's SCOPE is PROVIDED so it has to be defined
			     here again -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>		<!-- BEWARE!!! -->
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>
	</dependencies>

<!-- ====================================================================== -->
<!-- PLUGINS                                                                -->
<!-- ====================================================================== -->
  	<build>
		<pluginManagement>
			<plugins>
				<!--
				ECLIPSE (see main pom.xml for further info) ===================
				This plugin has NO effects in maven build:
					m2e ONLY runs some 'standard' goals of the maven pom.xml since the aim of m2e is NOT to be a complete CI tool
					... in order to include 'non-standard' goals in m2e execution and avoid [plugin execution not covered by the eclipse m2e plugin project build lifecycle mapping]
						the 'non-standard' plugin MUST be explicitly included in m2e execution
				-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- flatten plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>flatten-maven-plugin</artifactId>
										<versionRange>[1.1.0,)</versionRange>
										<goals>
											<goal>flatten</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	
<!-- ====================================================================== -->
<!-- PROFILES                                                               -->
<!-- ====================================================================== -->
<!--
	The application config has TWO levels:
	- public:                      anyone can see it 					> Project (artifact) name: [{appCode}Config]
	- private by EJIE environment: only authorized people can access it > Project (artifact) name: [{appCode}ConfigByEnv]
											
	The aim of the existence of TWO separate projects for configs is that anyone at the outside (not from EJIE) do NOT have the need of  
	private EJIE-dependent projects like `[{appCode}ConfigByEnv]` so just cloning the 'public' part of the code & config is
	usually enough to run the app
	... at the same time, inside EJIE, a `[{appCode}ConfigByEnv]` is used to store the environment-dependent or 'secret' config
	
	At runtime, while loading the config:
	- if an R01_ENV system property is set, config from the 'public' project (artifact) [{appCode}Config]
	  is MIXED with config from the 'private' project (artifcat)  [{appCode}ConfigByEnv]
	  
	- if NO R01_ENV system property is set only config from the 'public' project (artifact) [{appCode}Config] is used
	
	A Maven PROFILE is used so the 'private' project `[{appCode}ConfigByEnv]` is only required if `PROFILE=env_profile` 
	If a Maven PROFILE is **NOT** set (the default _'public'_ case), the `[{appCode}ConfigByEnv]` dependency is NOT required
	
	This way, the EJIE private config is 'secret' while anyone from the 'outside' (public) still can build the app without the EJIE private config artifact dependency 
-->
	<profiles>
		<!-- Used when a profile is NOT set [mvn clean install] (public) -->
		<profile>
			<id>default_profile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- Used when setting a profile like [mvn clean install -Penv_profile] (ejie internal) -->
		<profile>
			<id>env_profile</id>
			<dependencies>
				<dependency>
					<groupId>appmt.appmt00.config</groupId>
					<artifactId>appmt00APIConfigByEnv</artifactId>
					<version>${appmt.config.byenv.version}</version>
				</dependency>	
				<dependency>
					<groupId>appmt.appmt00.config</groupId>
					<artifactId>appmt00COREConfigByEnv</artifactId>
					<version>${appmt.config.byenv.version}</version>
				</dependency>
			</dependencies>
		</profile> 
	</profiles>

<!-- ====================================================================== -->
<!-- ARTIFACT DISTRIBUTION                                                  -->
<!-- ====================================================================== -->
	<distributionManagement>
		<repository>
			<id>maven-releases</id>
			<name>maven-releases</name>
			<layout>default</layout>
			<url>https://bin1.alm02.itbatera.euskadi.eus/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>maven-snapshots</id>
			<name>maven-snapshots</name>
			<layout>default</layout>
			<url>https://bin1.alm02.itbatera.euskadi.eus/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>
